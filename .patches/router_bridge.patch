diff --git a/src/api_schema.rs b/src/api_schema.rs
index 057feeb..bef5486 100644
--- a/src/api_schema.rs
+++ b/src/api_schema.rs
@@ -36,7 +36,7 @@ pub type ApiSchemaResult = Result<String, Vec<ApiSchemaError>>;
 pub fn api_schema(sdl: &str) -> Result<ApiSchemaResult, Error> {
     Js::new()
         .with_parameter("sdl", sdl)?
-        .execute::<ApiSchemaResult>("do_api_schema", include_str!("../js-dist/do_api_schema.js"))
+        .execute::<ApiSchemaResult>("do_api_schema", include_str!(concat!(env!("STATIC_DIR"), "/js-dist/do_api_schema.js")))
 }

 #[cfg(test)]
diff --git a/src/introspect.rs b/src/introspect.rs
index b4b1fa3..9157fdc 100644
--- a/src/introspect.rs
+++ b/src/introspect.rs
@@ -88,7 +88,7 @@ pub fn batch_introspect(sdl: &str, queries: Vec<String>) -> Result<Introspection
         .with_parameter("queries", queries)?
         .execute::<IntrospectionResult>(
             "do_introspect",
-            include_str!("../js-dist/do_introspect.js"),
+            include_str!(concat!(env!("STATIC_DIR"), "/js-dist/do_introspect.js")),
         )
 }

diff --git a/src/js.rs b/src/js.rs
index f84892e..36adefe 100644
--- a/src/js.rs
+++ b/src/js.rs
@@ -39,7 +39,7 @@ impl Js {
         source: &'static str,
     ) -> Result<Ok, Error> {
         // The snapshot is created in our build.rs script and included in our binary image
-        let buffer = include_bytes!("../snapshots/query_runtime.snap");
+        let buffer = include_bytes!(concat!(env!("STATIC_DIR"), "/snapshots/query_runtime.snap"));

         // Use our snapshot to provision our new runtime
         let options = RuntimeOptions {
diff --git a/src/plan.rs b/src/plan.rs
index 3905e11..70eba86 100644
--- a/src/plan.rs
+++ b/src/plan.rs
@@ -156,7 +156,7 @@ pub fn plan<T: DeserializeOwned + 'static>(
         .with_parameter("queryString", context.query)?
         .with_parameter("options", options)?
         .with_parameter("operationName", context.operation_name)?
-        .execute("do_plan", include_str!("../js-dist/do_plan.js"))
+        .execute("do_plan", include_str!(concat!(env!("STATIC_DIR"), "/js-dist/do_plan.js")))
         .map(|inner: Result<T, Vec<PlanningError>>| {
             inner.map_err(|errors| PlanningErrors { errors })
         })
--
2.25.1

