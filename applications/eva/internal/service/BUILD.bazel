load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "service",
    srcs = ["application.go"],
    importpath = "overdoll/applications/eva/internal/service",
    visibility = ["//applications/eva:__subpackages__"],
    deps = [
        "//applications/eva/internal/adapters",
        "//applications/eva/internal/app",
        "//applications/eva/internal/app/command",
        "//applications/eva/internal/app/query",
        "//applications/eva/internal/app/workflows/activities",
        "//libraries/bootstrap",
        "//libraries/clients",
        "//libraries/config",
        "//libraries/testing_tools/mocks",
        "@com_github_oschwald_geoip2_golang//:geoip2-golang",
        "@io_temporal_go_sdk//client",
        "@io_temporal_go_sdk//mocks",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "service_test",
    srcs = [
        "account_component_test.go",
        "account_settings_component_test.go",
        "authenticate_component_test.go",
        "component_test.go",
        "language_component_test.go",
        "location_component_test.go",
        "mocks_component_test.go",
        "staff_component_test.go",
    ],
    data = [
        "//applications/eva:config.toml",
        "//applications/eva/internal/service/file_fixtures:all",
    ],
    deps = [
        ":service",
        "//applications/carrier/proto:v1_go_proto",
        "//applications/eva/internal/adapters",
        "//applications/eva/internal/app/workflows",
        "//applications/eva/internal/domain/account",
        "//applications/eva/internal/ports",
        "//applications/eva/internal/ports/graphql/types",
        "//applications/eva/proto:v1_go_proto",
        "//applications/hades/proto:v1_go_proto",
        "//applications/sting/proto:v1_go_proto",
        "//libraries/bootstrap",
        "//libraries/config",
        "//libraries/graphql",
        "//libraries/graphql/relay",
        "//libraries/passport",
        "//libraries/testing_tools",
        "//libraries/uuid",
        "@com_github_bxcodec_faker_v3//:faker",
        "@com_github_pquerna_otp//totp",
        "@com_github_shurcool_graphql//:graphql",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//require",
        "@io_temporal_go_sdk//temporal",
        "@io_temporal_go_sdk//testsuite",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_protobuf//types/known/emptypb",
    ],
)
