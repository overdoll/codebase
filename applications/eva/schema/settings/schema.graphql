enum AccountEmailStatusEnum {
  CONFIRMED
  UNCONFIRMED
  PRIMARY
}

type AccountEmail {
  email: String!
  status: AccountEmailStatusEnum!
}

type AccountSession {
  userAgent: String!
  ip: String!
  created: String!
  id: String!
}

type AccountUsername {
  username: String!
}

type AccountGeneralSettings {
  """
  Emails for account (multiple emails per account)
  """
  emails: [AccountEmail!]!

  """
  Usernames for account (history)
  """
  usernames: [AccountUsername!]!
}


type AccountSecuritySettings {
  """
  Sessions linked to this account
  """
  sessions: [AccountSession!]!
}

type AccountSettings @key(fields: "accountId") {
  accountId: String!

  """
  General account settings for the user
  """
  general: AccountGeneralSettings!

  """
  Security settings for the user
  """
  security: AccountSecuritySettings!
}

extend type Mutation {
  """
  Add an email to the account, will need to be confirmed
  """
  addAccountEmail(email: String!): Response!

  """
  Modify the current account's username
  """
  modifyAccountUsername(username: String!): Response!

  """
  Revoke a session for this user
  """
  revokeSession(id: String!): Response!

  """
  Make account email primary
  """
  makeEmailPrimary(email: String!): Response!
}

extend type Query {
  """
  Get current settings for the account
  """
  accountSettings: AccountSettings!

  """
  Confirm account email, so it may be used
  """
  confirmAccountEmail(id: String!): Response!
}
