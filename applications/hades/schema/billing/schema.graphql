union AccountTransactionHistory = AccountNewTransactionHistory
  | AccountInvoiceTransactionHistory
  | AccountReactivatedTransactionHistory
  | AccountFailedTransactionHistory
  | AccountExpiredTransactionHistory
  | AccountRefundTransactionHistory
  | AccountVoidTransactionHistory
  | AccountChargebackTransactionHistory
  | AccountCancelledTransactionHistory

"""Represents a CCBill transaction, which may or may not contain these fields."""
type CCBillSubscriptionTransaction {
  ccbillTransactionId: String
  ccbillSubscriptionId: String!
}

enum AccountTransactionType {
  CLUB_SUPPORTER_SUBSCRIPTION
}

interface IAccountTransactionHistory {
  """An ID to uniquely identify this transaction history."""
  id: ID!

  """The type of account transaction history, or what it belongs to."""
  type: AccountTransactionType!

  """The account linked to this transaction history."""
  account: Account!

  """The club that was supported as part of this transaction history, if a club was supported."""
  supportedClub: Club

  """A ccbill subscription transaction, if this transaction originated from ccbill."""
  ccbillSubscriptionTransaction: CCBillSubscriptionTransaction

  """When this transaction occurred."""
  timestamp: Time!
}

"""Occurs when a new transaction history is created (usually a new subscription)."""
type AccountNewTransactionHistory implements IAccountTransactionHistory {
  """An ID to uniquely identify this transaction history."""
  id: ID!

  """The type of account transaction history, or what it belongs to."""
  type: AccountTransactionType!

  """The account linked to this transaction history."""
  account: Account!

  """The amount charged."""
  amount: Float!

  """The currency charged in."""
  currency: Currency!

  """When the billing occurred."""
  billedAtDate: Time!

  """The next billing date for this subscription."""
  nextBillingDate: Time!

  """The payment method linked to this new transaction history."""
  paymentMethod: PaymentMethod!

  """The club that was supported as part of this transaction history."""
  supportedClub: Club

  """A ccbill subscription transaction, if this transaction originated from ccbill."""
  ccbillSubscriptionTransaction: CCBillSubscriptionTransaction

  """When this transaction occurred."""
  timestamp: Time!
}

"""Occurs when a subscription is rebilled."""
type AccountInvoiceTransactionHistory implements IAccountTransactionHistory {
  """An ID to uniquely identify this transaction history."""
  id: ID!

  """The type of account transaction history, or what it belongs to."""
  type: AccountTransactionType!

  """The account linked to this transaction history."""
  account: Account!

  """The amount charged."""
  amount: Float!

  """The currency charged in."""
  currency: Currency!

  """When the billing occurred."""
  billedAtDate: Time!

  """The next billing date for this subscription."""
  nextBillingDate: Time!

  """The payment method linked to this new transaction history."""
  paymentMethod: PaymentMethod!

  """The club that was supported as part of this transaction history."""
  supportedClub: Club

  """A ccbill subscription transaction, if this transaction originated from ccbill."""
  ccbillSubscriptionTransaction: CCBillSubscriptionTransaction

  """When this transaction occurred."""
  timestamp: Time!
}

"""Occurs when a transaction subscription is reactivated (after being cancelled)."""
type AccountReactivatedTransactionHistory implements IAccountTransactionHistory {
  """An ID to uniquely identify this transaction history."""
  id: ID!

  """The type of account transaction history, or what it belongs to."""
  type: AccountTransactionType!

  """The account linked to this transaction history."""
  account: Account!

  """The next billing date for this subscription."""
  nextBillingDate: Time!

  """The club that was supported as part of this transaction history."""
  supportedClub: Club

  """A ccbill subscription transaction, if this transaction originated from ccbill."""
  ccbillSubscriptionTransaction: CCBillSubscriptionTransaction

  """When this transaction occurred."""
  timestamp: Time!
}

"""Occurs when a transaction subscription is failed to be billed."""
type AccountFailedTransactionHistory implements IAccountTransactionHistory {
  """An ID to uniquely identify this transaction history."""
  id: ID!

  """The type of account transaction history, or what it belongs to."""
  type: AccountTransactionType!

  """The account linked to this transaction history."""
  account: Account!

  """The next retry date for this transaction."""
  nextRetryDate: Time!

  """The club that was supported as part of this transaction history."""
  supportedClub: Club

  """If this is a CCBill transaction, the error code and error text."""
  ccbillErrorCode: String
  ccbillErrorText: String

  """A ccbill subscription transaction, if this transaction originated from ccbill."""
  ccbillSubscriptionTransaction: CCBillSubscriptionTransaction

  """When this transaction occurred."""
  timestamp: Time!
}

"""Occurs when a transaction subscription is expired (cancelled and the subscription end was reached)."""
type AccountExpiredTransactionHistory implements IAccountTransactionHistory {
  """An ID to uniquely identify this transaction history."""
  id: ID!

  """The type of account transaction history, or what it belongs to."""
  type: AccountTransactionType!

  """The account linked to this transaction history."""
  account: Account!

  """The club that was supported as part of this transaction history."""
  supportedClub: Club

  """A ccbill subscription transaction, if this transaction originated from ccbill."""
  ccbillSubscriptionTransaction: CCBillSubscriptionTransaction

  """When this transaction occurred."""
  timestamp: Time!
}

"""Occurs when a transaction is refunded."""
type AccountRefundTransactionHistory implements IAccountTransactionHistory {
  """An ID to uniquely identify this transaction history."""
  id: ID!

  """The type of account transaction history, or what it belongs to."""
  type: AccountTransactionType!

  """The account linked to this transaction history."""
  account: Account!

  """The amount refunded."""
  amount: Float!

  """The currency refunded in."""
  currency: Currency!

  """The club that was supported as part of this transaction history."""
  supportedClub: Club

  """The payment method linked to this refund (only card will be available)."""
  paymentMethod: PaymentMethod!

  """If this is a ccbill transaction, the reason for the refund."""
  ccbillReason: String

  """A ccbill subscription transaction, if this transaction originated from ccbill."""
  ccbillSubscriptionTransaction: CCBillSubscriptionTransaction

  """When this transaction occurred."""
  timestamp: Time!
}

"""Occurs when a transaction is voided."""
type AccountVoidTransactionHistory implements IAccountTransactionHistory {
  """An ID to uniquely identify this transaction history."""
  id: ID!

  """The type of account transaction history, or what it belongs to."""
  type: AccountTransactionType!

  """The account linked to this transaction history."""
  account: Account!

  """The amount voided."""
  amount: Float!

  """The currency voided in."""
  currency: Currency!

  """The club that was supported as part of this transaction history."""
  supportedClub: Club

  """If this is a ccbill transaction, the reason for the void."""
  ccbillReason: String

  """A ccbill subscription transaction, if this transaction originated from ccbill."""
  ccbillSubscriptionTransaction: CCBillSubscriptionTransaction

  """When this transaction occurred."""
  timestamp: Time!
}

"""Occurs when a transaction is charged back."""
type AccountChargebackTransactionHistory implements IAccountTransactionHistory {
  """An ID to uniquely identify this transaction history."""
  id: ID!

  """The type of account transaction history, or what it belongs to."""
  type: AccountTransactionType!

  """The account linked to this transaction history."""
  account: Account!

  """The amount charged back."""
  amount: Float!

  """The currency charged back in."""
  currency: Currency!

  """The club that was supported as part of this transaction history."""
  supportedClub: Club

  """The payment method linked to this chargeback (only card will be available)."""
  paymentMethod: PaymentMethod!

  """A ccbill subscription transaction, if this transaction originated from ccbill."""
  ccbillSubscriptionTransaction: CCBillSubscriptionTransaction

  """When this transaction occurred."""
  timestamp: Time!
}

"""Occurs when a club supporter subscription is cancelled."""
type AccountCancelledTransactionHistory implements IAccountTransactionHistory {
  """An ID to uniquely identify this transaction history."""
  id: ID!

  """The type of account transaction history, or what it belongs to."""
  type: AccountTransactionType!

  """The account linked to this transaction history."""
  account: Account!

  """The club that was supported as part of this transaction history."""
  supportedClub: Club

  """If this is a ccbill transaction, the reason for the cancellation."""
  ccbillReason: String

  """A ccbill subscription transaction, if this transaction originated from ccbill."""
  ccbillSubscriptionTransaction: CCBillSubscriptionTransaction

  """When this transaction occurred."""
  timestamp: Time!
}

"""
A generated refund amount.
"""
type RefundAmount {
  """A prorated refund amount, based on the first date and last date of billing / billing duration."""
  proratedAmount: Float!

  """The maximum amount you can issue a refund for."""
  maximumAmount: Float!

  """The currency."""
  currency: Currency!
}

enum CCBillSubscriptionStatus {
  """An inactive subscription, i.e. expired."""
  INACTIVE
  """An active subscription that was cancelled, or a one-time charge."""
  ACTIVE_AND_CANCELLED
  """An active subscription that is not cancelled."""
  ACTIVE_AND_NOT_CANCELLED
}

type CCBillSubscriptionDetails {
  """The ID of the subscription."""
  id: ID!

  """The status of the CCBill subscription."""
  status: CCBillSubscriptionStatus!

  """Payment method linked to this CCBill subscription."""
  paymentMethod: PaymentMethod!

  """The club linked to this ccbill subscription, if there is one."""
  club: Club

  """The account linked to this ccbill subscription."""
  account: Account!

  """Subscription details."""
  subscriptionInitialPrice: Float!
  subscriptionRecurringPrice: Float!
  subscriptionCurrency: Currency!

  """Billed details."""
  billedInitialPrice: Float!
  billedRecurringPrice: Float!
  billedCurrency: Currency!

  """Accounting details."""
  accountingInitialPrice: Float!
  accountingRecurringPrice: Float!
  accountingCurrency: Currency!

  """Whether or not this is recurring, or a one-time charge."""
  isRecurring: Boolean!

  """The amount of rebills that occurred."""
  timesRebilled: Int!

  """The amount of chargebacks issued."""
  chargebacksIssued: Int!

  """The amount of refunds issued."""
  refundsIssued: Int!

  """The amount of voids issued."""
  voidsIssued: Int!

  """The signup date."""
  signupDate: Time

  """If this subscription was cancelled, the expiration date."""
  expirationDate: Time

  """If this subscription was cancelled, the date it occurred."""
  cancelDate: Time

  """When this subscription was updated last."""
  updatedAt: Time!
}

"""
The ccbill subscription details.

When this object is present, this means that it can only be updated through CCBill support. https://support.ccbill.com/

For example: active subscriptions' payment methods can only be updated through support, or any saved payment methods.
"""
type CCBillSubscription {
  paymentMethod: String!
  ccbillSubscriptionId: String!
  email: String!
}

type AccountSavedPaymentMethod  {
  """An ID to uniquely identify this payment method."""
  id: ID!

  """The account linked to this saved payment method."""
  account: Account!

  """The payment method."""
  paymentMethod: PaymentMethod!

  """The ccbill subscription."""
  ccbillSubscription: CCBillSubscription

  """When this payment method was last updated."""
  updatedAt: Time!
}

"""An account club supporter subscription."""
type AccountClubSupporterSubscription {
  """An ID to uniquely identify this subscription."""
  id: ID!

  """The account linked to this subscription."""
  account: Account!

  """The club linked to this subscription."""
  club: Club!

  """The status of this subscription."""
  status: AccountClubSupporterSubscriptionStatus!

  """When the account first became a supporter."""
  supporterSince: Time!

  """The last billing date for this subscription."""
  lastBillingDate: Time!

  """The next billing date for this subscription."""
  nextBillingDate: Time!

  """When this subscription was cancelled."""
  cancelledAt: Time

  """The billing amount."""
  billingAmount: Float!

  """The currency."""
  billingCurrency: Currency!

  """The payment method linked to this subscription."""
  paymentMethod: PaymentMethod!

  """The ccbill subscription."""
  ccbillSubscription: CCBillSubscription

  """When this subscription was last updated."""
  updatedAt: Time!
}

enum AccountClubSupporterSubscriptionStatus {
  ACTIVE
  CANCELLED
}

enum CardType {
  VISA
  MASTERCARD
  DISCOVER
  JCB
  AMEX
  OTHER
}

"""Represents a billing address."""
type BillingAddress {
  AddressLine1: String!
  City: String!
  State: String!
  Country: String!
  PostalCode: String!
}

"""Represents a billing contact."""
type BillingContact {
  FirstName: String!
  LastName: String!
  Email: String!
  PhoneNumber: String!
}

"""Represents a card."""
type Card {
  """Last 4 digits of the card."""
  last4: String!

  """The expiration date."""
  expiration: String!

  """The type of card."""
  type: CardType!
}

"""A payment method."""
type PaymentMethod {
  """Card linked to this payment method."""
  card: Card!

  """Billing address of this card."""
  billingAddress: BillingAddress

  """Billing contact of this card."""
  billingContact: BillingContact
}

enum Currency {
  USD
  CAD
  AUD
  JPY
  GBP
  EUR
}

enum CCBillDeclineError {
  GENERAL_SYSTEM_ERROR
  TRANSACTION_DECLINED
  TRANSACTION_DENIED_OR_REFUSED_BY_BANK
  CARD_EXPIRED
  INSUFFICIENT_FUNDS
  RATE_LIMIT_ERROR
  TRANSACTION_APPROVAL_REQUIRED
}

"""Type describing a price."""
type Price {
  amount: Float!
  currency: Currency!
}

"""Type describing a localized pricing point."""
type LocalizedPricingPoint {
  """Price for your current location + currency."""
  localizedPrice: Price!

  """All other prices in different currencies."""
  prices: [Price!]!
}

"""Edge of the account club supporter subscriptions"""
type AccountClubSupporterSubscriptionEdge {
  node: AccountClubSupporterSubscription!
  cursor: String!
}

"""Connection of the account club supporter subscription"""
type AccountClubSupporterSubscriptionConnection {
  edges: [AccountClubSupporterSubscriptionEdge!]!
  pageInfo: PageInfo!
}

"""Edge of the account saved payment method"""
type AccountSavedPaymentMethodEdge {
  node: AccountSavedPaymentMethod!
  cursor: String!
}

"""Connection of the account saved payment method"""
type AccountSavedPaymentMethodConnection {
  edges: [AccountClubSupporterSubscriptionEdge!]!
  pageInfo: PageInfo!
}

"""Edge of the the account transaction history."""
type AccountTransactionHistoryEdge {
  node: AccountTransactionHistory!
  cursor: String!
}

"""Connection of the account transaction history."""
type AccountTransactionHistoryConnection {
  edges: [AccountClubSupporterSubscriptionEdge!]!
  pageInfo: PageInfo!
}

"""Payload for a new club supporter"""
type BecomeClubSupporterWithAccountSavedPaymentMethodPayload {
  """The club that was supported."""
  club: Club

  """The locker string which can be used to poll club supporter subscription status."""
  locker: String

  """Whether or not the transaction was approved."""
  approved: Boolean

  """The error from CCBill, if there is one."""
  ccbillDeclineError: CCBillDeclineError
}

"""Generate ccbill club supporter payment link."""
input GenerateCCBillClubSupporterPaymentLinkInput {
  """The chosen club ID."""
  clubId: ID!

  """The chosen currency."""
  currency: Currency!

  """Whether or not we want to save the payment details for later."""
  savePaymentDetailsForLater: Boolean!
}

"""Become club supporter with saved payment method."""
input BecomeClubSupporterWithAccountSavedPaymentMethodInput {
  """The chosen club ID."""
  clubId: ID!

  """The chosen currency."""
  currency: Currency!

  """The chosen saved payment method."""
  savedPaymentMethodId: ID!
}

"""Delete an account saved payment method input."""
input DeleteAccountSavedPaymentMethodInput {
  """The chosen saved payment method id."""
  savedPaymentMethodId: ID!
}

"""Payload for deleting an account saved payment method."""
type DeleteAccountSavedPaymentMethodPayload {
  """The deleted saved payment method."""
  deletedAccountSavedPaymentMethodId: ID!
}

"""Cancel account club supporter subscription input."""
input CancelAccountClubSupporterSubscriptionInput {
  """The chosen club supporter subscription id."""
  clubSupporterSubscriptionId: ID!
}

"""Generate a refund amount."""
input GenerateRefundAmountForAccountClubSupporterSubscriptionInput {
  """The id of the subscription."""
  clubSupporterSubscriptionId: ID!
}

"""Void or refund account club supporter subscription."""
input VoidOrRefundAccountClubSupporterSubscriptionInput {
  """The id of the subscription."""
  clubSupporterSubscriptionId: ID!

  """The amount to refund."""
  amount: Float!
}

"""Generate club supporter receipt input."""
input GenerateClubSupporterReceiptFromAccountTransactionHistoryInput {
  """The id of the transaction history."""
  transactionHistoryId: ID!
}

"""Payload for generating the receipt."""
type GenerateRefundAmountForAccountClubSupporterSubscriptionPayload {
  """The refund amount."""
  refundAmount: RefundAmount
}

"""Payload for generating the receipt."""
type GenerateClubSupporterReceiptFromAccountTransactionHistoryPayload {
  """The link to the receipt."""
  link: URI
}

enum VoidOrRefundAccountClubSupporterSubscriptionValidation {
  INVALID_AMOUNT
}

"""Payload for voiding or refunding account club supporter subscription."""
type VoidOrRefundAccountClubSupporterSubscriptionPayload {
  """Validation for voiding or refunding the subscription."""
  validation: VoidOrRefundAccountClubSupporterSubscriptionValidation
}

"""Payload for cancelling the account club supporter."""
type CancelAccountClubSupporterSubscriptionPayload {
  """The new subscription."""
  clubSupporterSubscription: AccountClubSupporterSubscription
}

"""Payload for a new ccbill payment link"""
type GenerateCCBillClubSupporterPaymentLinkPayload {
  """The payment link to use."""
  paymentLink: String!
}

extend type Account {
  """Club supporter subscriptions linked to this account."""
  clubSupporterSubscriptions(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): AccountClubSupporterSubscriptionConnection! @goField(forceResolver: true)

  """Saved payment methods linked to this account."""
  savedPaymentMethods(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): AccountSavedPaymentMethodConnection! @goField(forceResolver: true)

  """Transaction history for this account."""
  transactionHistory(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int

    """The start date for the transaction history."""
    startDate: Time!

    """The end date, optional (will search until end of time)."""
    endDate: Time
  ): AccountTransactionHistoryConnection! @goField(forceResolver: true)
}

extend type Club {
  """A supporter subscription price for this club."""
  supporterSubscriptionPrice: LocalizedPricingPoint! @goField(forceResolver: true)
}

extend type Mutation {
  """
  Generate a CCBill payment link to become a club supporter
  """
  generateCCBillClubSupporterPaymentLink(input: GenerateCCBillClubSupporterPaymentLinkInput!): GenerateCCBillClubSupporterPaymentLinkPayload

  """
  Become a club supporter using a saved payment method
  """
  becomeClubSupporterWithAccountSavedPaymentMethod(input: BecomeClubSupporterWithAccountSavedPaymentMethodInput!): BecomeClubSupporterWithAccountSavedPaymentMethodPayload

  """
  Cancel a club supporter subscription
  """
  cancelAccountClubSupporterSubscription(input: CancelAccountClubSupporterSubscriptionInput!): CancelAccountClubSupporterSubscriptionPayload

  """
  Delete an account saved payment method
  """
  deleteAccountSavedPaymentMethod(input: DeleteAccountSavedPaymentMethodInput!): DeleteAccountSavedPaymentMethodPayload

  """
  Generate the receipt from the account transaction history

  Note: can only be generated on "NEW" and "INVOICE" transactions.
  """
  generateClubSupporterReceiptFromAccountTransactionHistory(input: GenerateClubSupporterReceiptFromAccountTransactionHistoryInput!): GenerateClubSupporterReceiptFromAccountTransactionHistoryPayload

  """
  Void or refund an account club supporter subscription.

  Will void if the subscription is still processing, or issue a refund for the specified amount.

  Staff+ only.
  """
  voidOrRefundAccountClubSupporterSubscription(input: VoidOrRefundAccountClubSupporterSubscriptionInput!): VoidOrRefundAccountClubSupporterSubscriptionPayload

  """
  Generate a prorated refund amount for a given account club supporter subscription.

  Staff+ only.
  """
  generateRefundAmountForAccountClubSupporterSubscription(input: GenerateRefundAmountForAccountClubSupporterSubscriptionInput!): GenerateRefundAmountForAccountClubSupporterSubscriptionPayload!
}

extend type Query {
  """
  Grab more details about a ccbill subscription, passing in the ID.

  Staff+ only.
  """
  ccbillSubscriptionDetails(ccbillSubscriptionId: String!): CCBillSubscriptionDetails

  """
  After using a CCBill FlexForms link or charging a consumer with a saved payment method, this query should be used to "wait"
  until the subscription appears (since the system uses webhooks, it doesn't arrive "instantly").

  Pass in the locker string returned from a FlexFroms redirect or a saved payment method.
  """
  accountClubSupporterSubscriptionFinalized(locker: String!): AccountClubSupporterSubscription
}
