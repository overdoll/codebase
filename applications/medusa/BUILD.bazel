load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@build_bazel_rules_nodejs//:index.bzl", "copy_to_bin", "nodejs_binary")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load(":jest.bzl", "jest_test")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")
load("@npm//@lingui/cli:index.bzl", "lingui")
load("@npm//razzle:index.bzl", "razzle")

package(default_visibility = ["//visibility:public"])

_EXCLUDE = [
    ".env.example",
    ".env",
]

_SRC = glob(
    [
        "src/**/*",
        ".*",
    ],
    exclude = _EXCLUDE,
) + [
    "razzle.config.js",
    "package.json",
    "locales.config.js",
]

_RUNTIME_DEPS = [
    "@npm//react",
    "@npm//react-dom",
    "@npm//react-relay",
    "@npm//relay-runtime",
    "@npm//webpack",
    "@npm//express",
    "@npm//webpack-dev-middleware",
    "@npm//webpack-hot-middleware",
    "@npm//@babel/polyfill",
    "@npm//babel-loader",
    "@npm//@babel/node",
    "@npm//@babel/preset-env",
    "@npm//@babel/preset-react",
    "@npm//@babel/preset-flow",
    "@npm//@babel/plugin-proposal-function-bind",
    "@npm//@babel/plugin-proposal-class-properties",
    "@npm//@babel/plugin-transform-arrow-functions",
    "@npm//@babel/plugin-transform-runtime",
    "@npm//@babel/plugin-transform-modules-commonjs",
    "@npm//@babel/plugin-proposal-optional-chaining",
    "@npm//@babel/plugin-proposal-nullish-coalescing-operator",
    "@npm//css-loader",
    "@npm//dotenv-webpack",
    "@npm//html-loader",
    "@npm//html-webpack-plugin",
    "@npm//json-loader",
    "@npm//file-loader",
    "@npm//style-loader",
    "@npm//url-loader",
    "@npm//babel-plugin-relay",
    "@npm//@pmmmwh/react-refresh-webpack-plugin",
    "@npm//relay-compiler-webpack-plugin",
    "@npm//react-refresh",
    "@npm//@babel/plugin-transform-react-jsx",
    "@npm//razzle",
    "@npm//@lingui/cli",
    "@npm//react-ssr-prepass",
    "@npm//axios",
    "@npm//serialize-javascript",
    "@npm//@loadable/server",
    "@npm//@loadable/webpack-plugin",
    "@npm//@loadable/babel-plugin",
    "@npm//@loadable/component",
    "@npm//helmet",
    "@npm//cookie-parser",
    "@npm//csurf",
    "@npm//winston",
    "@npm//@emotion/react",
    "@npm//@emotion/cache",
    "@npm//@emotion/server",
    "@npm//@emotion/css",
    "@npm//react-hook-form",
    "@npm//@uppy/core",
    "@npm//@uppy/tus",
    "@npm//@uppy/golden-retriever",
    "@npm//@uppy/thumbnail-generator",
    "@npm//@uppy/react",
    "@npm//react-beautiful-dnd",
    "@npm//use-query-params",
    "@npm//query-string",
    "@npm//webpack-bundle-analyzer",
    "@npm//babel-plugin-istanbul",
    "@npm//@chakra-ui/react",
    "@npm//@emotion/styled",
    "@npm//framer-motion",
    "@npm//babel-plugin-inline-react-svg",
    "@npm//svgo",
    "@npm//redis",
    "@npm//relay-compiler-plus",
    "@npm//express-session",
    "@npm//connect-redis",
    "@npm//apollo-server-express",
    "@npm//@apollo/gateway",
    "@npm//universal-cookie-express",
    "@npm//react-helmet-async",
    "@npm//@hookform/resolvers",
    "@npm//joi",
    "@npm//express-handlebars",
    "@npm//ua-parser-js",
    "@npm//swiper",
    "@npm//numbro",
    "@npm//@casl/ability",
    "@npm//@casl/react",
    "@npm//apollo-server",
    "@npm//date-fns",
    "@npm//js-file-download",
    "@npm//react-cookie",
    "@npm//universal-cookie",
    "@npm//@babel/preset-typescript",
    "@npm//babel-plugin-macros",
    "@npm//@lingui/babel-preset-react",
    "@npm//@lingui/macro",
    "@npm//path-to-regexp",
    "@npm//history",
    "@npm//@lingui/react",
    "@npm//graphql-playground-html",
    "@npm//url-slug",
    "@npm//usehooks-ts",
    "@npm//@svgr/webpack",
]

TEST_DEPS = [
    "jest.setup.ts",
    "jest.config.js",
    "chdir.js",
] + glob(
    [
        "src/__generated__/*",
        ".*",
    ],
    exclude = _EXCLUDE,
) + _RUNTIME_DEPS + [
    "@npm//ts-jest",
    "@npm//@testing-library/react",
    "@npm//babel-jest",
    "@npm//relay-test-utils",
    "@npm//jest-environment-jsdom-sixteen",
    "@npm//@testing-library/jest-dom",
    "@npm//fake-indexeddb",
    "@npm//@testing-library/user-event",
    "@npm//identity-obj-proxy",
]

_SERVER_DEPS = []

filegroup(
    name = "packages",
    data = _RUNTIME_DEPS,
)

copy_to_bin(
    name = "copy_static_files",
    srcs = _SRC,
)

write_file(
    name = "write_chdir_script",
    out = "chdir.js",
    content = ["process.chdir(__dirname)"],
)

jest_test(
    name = "unit",
    srcs = glob(
        [
            "src/client/**/*",
            "src/modules/**/*",
        ],
    ),
    jest_config = "jest.config.js",
    deps = TEST_DEPS,
)

razzle(
    name = "bundle",
    outs = [
        "build/assets.json",
        "build/loadable-stats.json",
        "build/public",
        "build/server.js",
    ],
    args = [
        "--node_options=--require=./$(location chdir.js)",
        "build",
        "--noninteractive",
    ],
    data = [
        "copy_static_files",
        "chdir.js",
    ] + _RUNTIME_DEPS,
)

nodejs_binary(
    name = "medusa-production",
    data = [
        "chdir.js",
        ":bundle",
    ] + glob([
        "src/server/views/**",
        "public/**/*",
    ]) + _SERVER_DEPS,
    entry_point = "build/server.js",
    templated_args = [
        "--node_options=--require=./$(rootpath chdir.js)",
    ],
)

nodejs_image(
    name = "medusa-production-image",
    binary = ":medusa-production",
    env = {
        "NODE_ENV": "production",
        "PORT": "8080",
    },
)

container_push(
    name = "publish-testing",
    format = "Docker",
    image = ":medusa-production-image",
    registry = "$(CONTAINER_REGISTRY)",
    repository = "medusa/dev",
    tag = "$(CONTAINER_TAG)",
)

container_push(
    name = "publish",
    format = "Docker",
    image = ":medusa-production-image",
    registry = "$(CONTAINER_REGISTRY)",
    repository = "medusa",
    skip_unchanged_digest = True,
    tag = "$(CONTAINER_TAG)",
)
