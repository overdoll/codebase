import JSResource from './utilities/JSResource';
import RelayEnvironment from './RelayEnvironment';
import { graphql, loadEntryPoint } from 'react-relay/hooks';

const environmentProvider = { getEnvironment: () => RelayEnvironment };

const routes = [
  {
    prepare: function() {},
    component: JSResource('Root', () => import('./Root')),
    routes: [
      {
        path: '/join',
        component: JSResource('JoinRoot', () =>
          import('./components/JoinRoot'),
        ),
        prepare: function() {},
      },
      {
        path: '/token/:id',
        component: JSResource('TokenRoot', () =>
          import('./components/TokenRoot'),
        ),
        prepare: params => {
          const TokenQuery = graphql`
            query routesQuery($cookie: String!) {
              redeemCookie(cookie: $cookie) {
                same
              }
            }
          `;

          const resource = JSResource('TokenRoot', () =>
            import('./components/TokenRoot'),
          );

          return {
            tokenQuery: loadEntryPoint(
              environmentProvider,
              {
                root: resource,
                getPreloadProps(params) {
                  return {
                    // we may want to pass some extra props to the react component.
                    extraProps: {},
                    // nested entrypoints will be defined here
                    entryPoints: {},
                    // queries will be defined here.
                    queries: {
                      tokenQuery: {
                        // the AST generated by relay-compiler
                        parameters: TokenQuery,
                        // the variables the query may need.
                        variables: { cookie: params.cookie },
                      },
                    },
                  };
                },
              },
              { cookie: params.id },
            ),
          };
        },
      },
    ],
  },
];

export default routes;
