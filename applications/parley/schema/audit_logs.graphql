enum PendingPostAuditLogActionEnum {
  Approved
  Denied
}

"""
Pending post audit log

Audit log is created when a moderator takes an action against a pending post
"""
type PendingPostAuditLog implements Node @key(fields: "id") {
  """ID of the audit log"""
  id: ID!

  """The contributor that the audit log belongs to"""
  contributor: Actor!

  """The moderator that this log belongs to"""
  moderator: Actor!

  """The status or the action that was taken against the pending post"""
  action: PendingPostAuditLogActionEnum!

  """The reason the action was taken"""
  reason: String!

  """Additional notes by the moderator"""
  notes: String!

  """If this audit log was reverted"""
  reverted: Boolean!

  """The time until which this audit log will be revertable"""
  reversibleUntil: Time!

  """The infraction that is linked to this audit log, mainly kept here as a reference so reverting will be easier"""
  infractionId: ID
}

"""Edge of the audit log"""
type PendingPostAuditLogEdge {
  node: PendingPostAuditLog!
  cursor: String!
}

"""Connection of the audit log"""
type PendingPostAuditLogConnection {
  edges: [PendingPostAuditLogEdge!]!
  pageInfo: PageInfo!
}

extend type PendingPost @key(fields: "id") {
  id: ID! @external

  """Audit logs belonging to this pending post"""
  auditLogs: [PendingPostAuditLog!]
}

extend type Account @key(fields: "id") {
  """
  Pending Post Audit Logs linked to this account

  Viewable by either the currently logged-in account or staff+
  """
  pendingPostAuditLogs(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PendingPostAuditLogConnection! @goField(forceResolver: true) @auth
}