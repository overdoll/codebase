"""Club infraction reason."""
type ClubInfractionReason implements Node @key(fields: "id") {
  """ID of the infraction reason."""
  id: ID!

  """The reason."""
  reason: String!

  """All translations for this reason."""
  reasonTranslations: [Translation!]!

  """If this reason is deprecated."""
  deprecated: Boolean!
}

"""Edge of the club infraction reason"""
type ClubInfractionReasonEdge {
  node: ClubInfractionReason!
  cursor: String!
}

"""Connection of the club infraction reason"""
type ClubInfractionReasonConnection {
  edges: [ClubInfractionReasonEdge!]!
  pageInfo: PageInfo!
}

enum ClubInfractionHistorySource {
  MANUAL
  POST_MODERATION_REJECTION
  POST_MANUAL_REMOVAL
}

"""Infraction history belonging to a club"""
type ClubInfractionHistory implements Node @key(fields: "id") {
  """ID of the infraction history"""
  id: ID!

  """The club belonging to this history object."""
  club: Club!

  """The account that issued this infraction."""
  issuerAccount: Account!

  """The club infraction reason."""
  infractionReason: ClubInfractionReason!

  """The source for this infraction."""
  source: ClubInfractionHistorySource!

  """When this infraction was issued."""
  issuedAt: Time!

  """When this infraction expires (no longer considered when issuing future infractions)."""
  expiresAt: Time!
}

"""Edge of the infraction history"""
type ClubInfractionHistoryEdge {
  node: ClubInfractionHistory!
  cursor: String!
}

"""Connection of the infraction history"""
type ClubInfractionHistoryConnection {
  edges: [ClubInfractionHistoryEdge!]!
  pageInfo: PageInfo!
}

extend type Club {
  """
  Infraction history for this club

  Viewable by the currently authenticated account or staff+
  """
  infractionHistory(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the elements in the list that come before the specified cursor."""
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ClubInfractionHistoryConnection! @goField(forceResolver: true)
}

extend type Query {
  """
  Get club infraction reasons.
  """
  clubInfractionReasons(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int

    """Whether or not to show deprecated reasons."""
    deprecated: Boolean! = false
  ): ClubInfractionReasonConnection! @goField(forceResolver: true)
}

"""Create a new club infraction reason input."""
input CreateClubInfractionReasonInput {
  """The reason text."""
  reason: String!
}

"""Update club infraction reason."""
input UpdateClubInfractionReasonDeprecatedInput {
  """The club infraction to take action against."""
  reasonId: ID!

  """Whether or not this club infraction reason should be deprecated."""
  deprecated: Boolean!
}

"""Update club infraction reason."""
input UpdateClubInfractionReasonTextInput {
  """The club infraction to take action against."""
  reasonId: ID!

  """The reason to update"""
  reason: String!

  """The localization for this reason"""
  locale: BCP47!
}

"""Issue a club infraction."""
input IssueClubInfractionInput {
  """The club to issue the infraction to."""
  clubId: ID!

  """The club infraction to use."""
  infractionReasonId: ID!

  """Pass a custom end time. If none is passed, will use sliding scale based on previous infractions."""
  customEndTime: Time
}

"""Remove a club infraction."""
input RemoveClubInfractionHistoryInput {
  """The history item to remove."""
  clubInfractionHistoryId: ID!
}

"""Update club infraction reason payload."""
type UpdateClubInfractionReasonDeprecatedUpload {
  """The club infraction reason."""
  clubInfractionReason: ClubInfractionReason
}

"""Create a new club infraction reason payload."""
type CreateClubInfractionReasonPayload {
  """The club infraction reason."""
  clubInfractionReason: ClubInfractionReason
}

"""Create a new club infraction reason payload."""
type UpdateClubInfractionReasonTextPayload {
  """The club infraction reason."""
  clubInfractionReason: ClubInfractionReason
}

"""Issue a new club infraction payload."""
type IssueClubInfractionPayload {
  """The new club infraction history item."""
  clubInfractionHistory: ClubInfractionHistory
}

"""Remove club infraction history."""
type RemoveClubInfractionHistoryPayload {
  """The removed infraction history Id."""
  clubInfractionHistoryId: ID!
}

extend type Mutation {
  """
  Create a club infraction reason.
  """
  createClubInfractionReason(input: CreateClubInfractionReasonInput!): CreateClubInfractionReasonPayload

  """
  Update club infraction reason deprecation.
  """
  updateClubInfractionReasonDeprecated(input: UpdateClubInfractionReasonDeprecatedInput!): UpdateClubInfractionReasonDeprecatedUpload

  """
  Update club infraction reason text.
  """
  updateClubInfractionReasonText(input: UpdateClubInfractionReasonTextInput!): UpdateClubInfractionReasonTextPayload

  """
  Issue a club infraction.
  """
  issueClubInfraction(input: IssueClubInfractionInput!): IssueClubInfractionPayload

  """
  In case of a false infraction, you can remove it from the club's history.

  Staff+ only.
  """
  removeClubInfractionHistory(input: RemoveClubInfractionHistoryInput!): RemoveClubInfractionHistoryPayload
}
