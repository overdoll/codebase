input ModeratePostInput {
  pendingPostId: String!
  rejectionReasonId: String
  notes: String!
}

input RevertPostInput {
  auditLogId: String!
}

type ModeratePost {
  auditLog: PendingPostAuditLog
  validation: Validation
}

extend type Mutation {
  """
  Moderate a specific pending post
  Pending post must belong to the moderator

  If rejecting, must input a rejection reason and additional notes
  """
  moderatePost(data: ModeratePostInput!): ModeratePost!

  """
  Revert an audit log, in case it was done incorrectly

  Will delete an infraction if there was one, but the rest of the audit log will generally stay intact
  """
  revertPendingPostAuditLog(data: RevertPostInput!): ModeratePost!
}
