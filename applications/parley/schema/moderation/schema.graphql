"""Moderate the pending post input"""
input RejectPostInput {
  """Pending post to take action against"""
  postId: ID!

  """Required to enter a rule ID."""
  ruleId: ID!

  """Any extra notes for the moderator"""
  notes: String
}

"""Moderate the pending post input"""
input RemovePostInput {
  """Pending post to take action against"""
  postId: ID!

  """Required to enter a rule ID."""
  ruleId: ID!

  """Any extra notes for the staff member"""
  notes: String
}

"""Approve the pending post input"""
input ApprovePostInput {
  """Pending post to take action against"""
  postId: ID!
}

"""Add moderator to posts queue."""
input AddModeratorToPostQueueInput {
  """The moderator account to take the action on"""
  accountId: ID!
}

"""Remove moderator from posts queue."""
input RemoveModeratorFromPostQueueInput {
  """The moderator account to take the action on"""
  accountId: ID!
}

"""Remove moderator from posts queue."""
type AddModeratorToPostQueuePayload {
  """The account that was updated"""
  account: Account
}

"""Remove moderator from posts queue."""
type RemoveModeratorFromPostQueuePayload {
  """The account that was updated"""
  account: Account
}

"""Reject the pending post payload"""
type RejectPostPayload {
  """The resulting post"""
  post: Post
}

"""Approve the pending post payload"""
type ApprovePostPayload {
  """The resulting post"""
  post: Post
}

"""Remove the pending post payload"""
type RemovePostPayload {
  """The resulting post"""
  post: Post
}

extend type Mutation {
  """
  Reject a specific post

  Moderator+ only
  """
  rejectPost(input: RejectPostInput!): RejectPostPayload

  """
  Remove a specific post, after a post has already been moderated

  Staff+ only
  """
  removePost(input: RemovePostInput!): RemovePostPayload

  """
  Approve a specific post.

  Moderator+ only
  """
  approvePost(input: ApprovePostInput!): ApprovePostPayload

  """
  Add moderator to posts queue

  Moderator+ only
  """
  addModeratorToPostQueue(input: AddModeratorToPostQueueInput!): AddModeratorToPostQueuePayload

  """
  Remove moderator from posts queue

  Moderator+ only
  """
  removeModeratorFromPostQueue(input: RemoveModeratorFromPostQueueInput!): RemoveModeratorFromPostQueuePayload
}

"""General moderator settings."""
type ModeratorSettings {
  """If this moderator is in queue."""
  isInModeratorQueue: Boolean!

  """The last time this moderator was selected for a post. Null if moderator not in queue"""
  lastSelected: Time
}

type PostEdge {
  cursor: String!
  node: Post!
}

type PostConnection {
  edges: [PostEdge!]!
  pageInfo: PageInfo!
}

extend type Account {
  """
  Moderator settings and status for this account

  Viewable by the currently authenticated account or staff+
  """
  moderatorSettings: ModeratorSettings! @goField(forceResolver: true)

  """Posts queue specific to this account (when moderator)"""
  moderatorPostsQueue(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the elements in the list that come before the specified cursor."""
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PostConnection! @goField(forceResolver: true)
}
