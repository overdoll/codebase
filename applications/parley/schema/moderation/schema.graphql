"""Moderate the pending post input"""
input RejectPostInput {
  """Pending post to take action against"""
  postId: ID!

  """Required to enter a rejection reason ID"""
  postRejectionReasonId: ID!

  """Any extra notes for the moderator"""
  notes: String
}

"""Moderate the pending post input"""
input RemovePostInput {
  """Pending post to take action against"""
  postId: ID!

  """Required to enter a rejection reason ID"""
  postRejectionReasonId: ID!

  """Any extra notes for the staff member"""
  notes: String
}

"""Approve the pending post input"""
input ApprovePostInput {
  """Pending post to take action against"""
  postId: ID!
}

"""Revert the pending post audit log input"""
input RevertPostAuditLogInput {
  """The audit log to revert"""
  postAuditLogId: ID!
}

"""Reject the pending post payload"""
type RejectPostPayload {
  """The audit log generated by the pending post"""
  postAuditLog: PostAuditLog
}

"""Approve the pending post payload"""
type ApprovePostPayload {
  """The audit log generated by the pending post"""
  postAuditLog: PostAuditLog
}

"""Remove the pending post payload"""
type RemovePostPayload {
  """The audit log generated by the pending post"""
  postAuditLog: PostAuditLog
}

"""Revert the pending post audit log payload"""
type RevertPostAuditLogPayload {
  """The new state of the audit log"""
  postAuditLog: PostAuditLog
}

"""Toggle whether or not the moderator will be part of the queue"""
type ToggleModeratorSettingsInQueuePayload {
  """The new status of the moderator in queue"""
  moderatorSettingsInQueue: Boolean
}

extend type Mutation {
  """
  Reject a specific post
  """
  rejectPost(input: RejectPostInput!): RejectPostPayload

  """
  Remove a specific post, after a post has already been moderated
  """
  removePost(input: RemovePostInput!): RemovePostPayload

  """
  Approve a specific post
  """
  approvePost(input: ApprovePostInput!): ApprovePostPayload

  """
  Revert an audit log, in case it was done incorrectly

  Will delete an infraction if there was one, but the rest of the audit log will generally stay intact
  """
  revertPostAuditLog(input: RevertPostAuditLogInput!): RevertPostAuditLogPayload

  """
  Toggle moderator status

  Will remove or add the moderator from the queue

  Current status can be queried from moderatorSettings of the account
  """
  toggleModeratorSettingsInQueue: ToggleModeratorSettingsInQueuePayload
}

type Moderator implements Node @key(fields: "id") {
  """The ID of the moderator"""
  id: ID!

  """The last time this moderator was selected for a post"""
  lastSelected: Time!
}

extend type Account {
  """
  Moderator settings and status for this account

  Viewable by the currently authenticated account or staff+
  """
  moderator: Moderator @goField(forceResolver: true)
}