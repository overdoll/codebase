// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package types

type AuditUser struct {
	ID       string `json:"id"`
	Username string `json:"username"`
}

type ModeratePost struct {
	AuditLog   *PendingPostAuditLog `json:"auditLog"`
	Validation *Validation          `json:"validation"`
}

type ModeratePostInput struct {
	PendingPostID     string  `json:"pendingPostId"`
	RejectionReasonID *string `json:"rejectionReasonId"`
	Notes             string  `json:"notes"`
}

type PendingPostAuditLog struct {
	ID           string     `json:"id"`
	PostID       string     `json:"postId"`
	Contributor  *AuditUser `json:"contributor"`
	Moderator    *AuditUser `json:"moderator"`
	InfractionID *string    `json:"infractionId"`
	Status       string     `json:"status"`
	Reason       string     `json:"reason"`
	Notes        string     `json:"notes"`
	Reverted     bool       `json:"reverted"`
	CanRevert    bool       `json:"canRevert"`
}

type PendingPostAuditLogConnection struct {
	Edges []*PendingPostAuditLogEdge `json:"edges"`
}

type PendingPostAuditLogEdge struct {
	Node *PendingPostAuditLog `json:"node"`
}

type PendingPostAuditLogFilters struct {
	ModeratorID   *string `json:"moderatorId"`
	ContributorID *string `json:"contributorId"`
	PostID        *string `json:"postId"`
	DateRange     []int   `json:"dateRange"`
}

type PendingPostRejectionReason struct {
	ID         string `json:"id"`
	Reason     string `json:"reason"`
	Infraction bool   `json:"infraction"`
}

type RevertPostInput struct {
	AuditLogID string `json:"auditLogId"`
}

type User struct {
	ID                string                    `json:"id"`
	InfractionHistory []*UsersInfractionHistory `json:"infractionHistory"`
}

func (User) IsEntity() {}

type UsersInfractionHistory struct {
	ID     string `json:"id"`
	Reason string `json:"reason"`
}

type Validation struct {
	Code string `json:"code"`
}
