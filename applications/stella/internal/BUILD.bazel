load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")

DEPENDENCIES = ["//applications/stella:config.toml"]

go_library(
    name = "internal_lib",
    srcs = ["main.go"],
    data = DEPENDENCIES,
    importpath = "overdoll/applications/stella/internal",
    visibility = ["//visibility:private"],
    deps = [
        "//applications/stella/internal/adapters/migrations",
        "//applications/stella/internal/adapters/seeders",
        "//applications/stella/internal/ports",
        "//applications/stella/internal/service",
        "//applications/stella/proto:v1_go_proto",
        "//libraries/bootstrap",
        "//libraries/config",
        "//libraries/database",
        "@com_github_spf13_cobra//:cobra",
        "@org_golang_google_grpc//:go_default_library",
    ],
)

go_binary(
    name = "internal",
    embed = [":internal_lib"],
    visibility = ["//visibility:public"],
)

go_image(
    name = "local-image",
    base = "@go_base_image//image",
    data = ["//applications/stella:.env"] + DEPENDENCIES,
    embed = [":internal_lib"],
    importpath = "overdoll/applications/stella",
)

go_image(
    name = "image",
    base = "@go_base_image//image",
    data = DEPENDENCIES,
    embed = [":internal_lib"],
    importpath = "overdoll/applications/stella",
)

container_push(
    name = "publish-testing",
    format = "Docker",
    image = ":image",
    registry = "$(CONTAINER_REGISTRY)",
    repository = "stella/dev",
    tag = "$(CONTAINER_TAG)",
)

container_push(
    name = "publish",
    format = "Docker",
    image = ":image",
    registry = "$(CONTAINER_REGISTRY)",
    repository = "stella",
    skip_unchanged_digest = True,
    tag = "$(CONTAINER_TAG)",
)
