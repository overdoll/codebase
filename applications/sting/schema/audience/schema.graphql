type Audience implements Node & Object @key(fields: "id") {
  """An ID pointing to this audience."""
  id: ID!

  """A url-friendly ID. Should be used when searching"""
  slug: String!

  """A URL pointing to the object's thumbnail."""
  thumbnail(
    """The size of the resulting square image."""
    size: Int
  ): Resource

  """A title for this audience."""
  title: String!
}

type AudienceEdge {
  cursor: String!
  node: Audience!
}

type AudienceConnection {
  edges: [AudienceEdge!]!
  pageInfo: PageInfo!
}

extend type Query {
  audiences(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the elements in the list that come before the specified cursor."""
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int

    """Search by title of the audience."""
    title: String
  ): AudienceConnection!
}

extend type Post {
  """Represents the audience that this post belongs to"""
  audience: Audience
}
