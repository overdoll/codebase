type Brand implements Node & Object @key(fields: "id") {
  """An ID pointing to this brand."""
  id: ID!

  """A url-friendly ID. Should be used when searching"""
  slug: String!

  """A URL pointing to the object's thumbnail."""
  thumbnail: Resource

  """A name for this brand."""
  name: String!
}

type BrandEdge {
  cursor: String!
  node: Brand!
}

type BrandConnection {
  edges: [BrandEdge!]!
  pageInfo: PageInfo!
}

"""Ordering options for brands"""
input BrandsOrder {
  """The field to order brands by."""
  field: BrandsOrderField!
}

"""Properties by which brand connections can be ordered."""
enum BrandsOrderField {
  """Brand by created time"""
  CREATED_AT
}

extend type Query {
  """Search multiple brands."""
  brands(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the elements in the list that come before the specified cursor."""
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int

    """Search by brand slugs."""
    slugs: [String!]

    """Filter by the name of the brand."""
    name: String

    """Ordering options for brands."""
    orderBy: BrandsOrder! = { field: CREATED_AT }
  ): BrandConnection!

  """Get a single brand."""
  brand(
    """Search by slug of the brand."""
    slug: String!
  ): Brand
}

extend type Post {
  """Represents the brand that this post belongs to"""
  brand: Brand
}
