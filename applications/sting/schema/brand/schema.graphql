type Brand implements Node & Object @key(fields: "id") {
  """An ID pointing to this brand."""
  id: ID!

  """A url-friendly ID. Should be used when searching"""
  slug: String!

  """A URL pointing to the object's thumbnail."""
  thumbnail(
    """The size of the resulting square image."""
    size: Int
  ): Resource!

  """A name for this brand."""
  name: String!
}

type BrandEdge {
  cursor: String!
  node: Brand!
}

type BrandConnection {
  edges: [BrandEdge!]!
  pageInfo: PageInfo!
}

extend type Query {
  brands(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the elements in the list that come before the specified cursor."""
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int

    # filter by the name of the brand
    name: String
  ): BrandConnection!
}

extend type Post {
  """Represents the brand that this post belongs to"""
  brand: Brand
}
