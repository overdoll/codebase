type Category implements Node & Object @key(fields: "id") {
  """An ID pointing to this category."""
  id: ID!

  """A url-friendly ID. Should be used when searching"""
  slug: String!

  """A URL pointing to the object's thumbnail."""
  thumbnail: Resource

  """A title for this category."""
  title: String!
}

type CategoryEdge {
  cursor: String!
  node: Category!
}

type CategoryConnection {
  edges: [CategoryEdge!]!
  pageInfo: PageInfo!
}

"""Ordering options for categories"""
input CategoriesOrder {
  """The field to order categories by."""
  field: CategoriesOrderField!
}

"""Properties by which category connections can be ordered."""
enum CategoriesOrderField {
  """Category by created time"""
  CREATED_AT
}

extend type Query {
  """Search all categories."""
  categories(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the elements in the list that come before the specified cursor."""
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int

    """Search by category slugs."""
    slugs: [String!]

    """Filter by the title of the category."""
    title: String

    """Ordering options for categories."""
    orderBy: CategoriesOrder! = { field: CREATED_AT }
  ): CategoryConnection!

  """Get a single category."""
  category(
    """Search by slug of the category."""
    slug: String!
  ): Category
}

extend type Post {
  """Categories that belong to this post"""
  categories: [Category!]!
}