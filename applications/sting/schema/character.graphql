type Media implements Node {
  id: ID!
  thumbnail: String!
  title: String!
}

type MediaEdge {
  cursor: String!
  node: Media!
}

type MediaConnection {
  edges: [MediaEdge!]!
  pageInfo: PageInfo!
}

type Character implements Node {
  id: ID!
  thumbnail: String!
  name: String!
  media: Media!
}

type CharacterEdge {
  cursor: String!
  node: Character!
}

type CharacterConnection {
  edges: [CharacterEdge!]!
  pageInfo: PageInfo!
}

interface CharacterContainer {
  """Characters that belong to this post"""
  characters: CharacterConnection! @cursor
}

extend type Query {
  medias(
    # filter by the title of the media
    title: String
  ): MediaConnection! @cursor

  characters(
    # Filter by the name of the character
    name: String

    # filter by the title of the media
    mediaTitle: String
  ): CharacterConnection! @cursor
}

extend type PendingPost implements CharacterContainer {
  """Characters that belong to this post"""
  characters: CharacterConnection! @cursor
}