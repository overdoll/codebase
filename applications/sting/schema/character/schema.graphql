type Series implements Node & Object @key(fields: "id") {
  """An ID pointing to this series."""
  id: ID!

  """A url-friendly ID. Should be used when searching"""
  slug: String!

  """A URL pointing to the object's thumbnail."""
  thumbnail(
    """The size of the resulting square image."""
    size: Int
  ): URI!

  """A title for this series."""
  title: String!
}

type SeriesEdge {
  cursor: String!
  node: Series!
}

type SeriesConnection {
  edges: [SeriesEdge!]!
  pageInfo: PageInfo!
}

type Character implements Node & Object @key(fields: "id") {
  """An ID pointing to this character."""
  id: ID!

  """A url-friendly ID. Should be used when searching"""
  slug: String!

  """A URL pointing to the object's thumbnail."""
  thumbnail(
    """The size of the resulting square image."""
    size: Int
  ): URI!

  """A name for this character."""
  name: String!

  """The series linked to this character."""
  series: Series!
}

type CharacterEdge {
  cursor: String!
  node: Character!
}

type CharacterConnection {
  edges: [CharacterEdge!]!
  pageInfo: PageInfo!
}

extend type Query {
  """Get or search all series"""
  series(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the elements in the list that come before the specified cursor."""
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int

    # filter by the title of the series
    title: String
  ): SeriesConnection!

  """Get or search all characters"""
  characters(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the elements in the list that come before the specified cursor."""
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int

    # Filter by the name of the character
    name: String
  ): CharacterConnection!
}

extend type Post {
  """Characters that belong to this post"""
  characters: [Character!]!
}