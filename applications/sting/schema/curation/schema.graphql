type DateOfBirthCurationProfile {
  """Whether or not the date of birth section was skipped."""
  skipped: Boolean!

  """Whether or not the date of birth section was completed."""
  completed: Boolean!

  """The date of birth set."""
  dateOfBirth: Time
}

type AudienceCurationProfile {
  """Whether or not the audience section was completed."""
  completed: Boolean!

  """Whether or not the audience section was skipped."""
  skipped: Boolean!

  """Audiences selected for this section."""
  audiences: [Audience!]! @goField(forceResolver: true)
}

type CategoryCurationProfile {
  """Whether or not the category section was completed."""
  completed: Boolean!

  """Whether or not the category section was skipped."""
  skipped: Boolean!

  """Categories selected for this section."""
  categories: [Category!]! @goField(forceResolver: true)
}

type CurationProfile {
  """An ID uniquely identifying this profile."""
  id: ID!

  """If the whole profile was completed or not."""
  completed: Boolean!

  """The date of birth profile."""
  dateOfBirth: DateOfBirthCurationProfile!

  """The audience profile."""
  audience: AudienceCurationProfile!

  """The category profile."""
  category: CategoryCurationProfile!
}

extend type Account {
  """The curation profile linked to this account."""
  curationProfile: CurationProfile! @goField(forceResolver: true)
}

"""Update curation profile audience."""
input UpdateCurationProfileAudienceInput {
  """The audiences that were selected"""
  audienceIds: [ID!]!

  """Whether or not this section was skipped"""
  skipped: Boolean!
}

"""Update curation profile category."""
input UpdateCurationProfileCategoryInput {
  """The categories that were selected"""
  categoryIds: [ID!]!

  """Whether or not this section was skipped"""
  skipped: Boolean!
}

"""Update curation profile date of birth."""
input UpdateCurationProfileDateOfBirthInput {
  """The date of birth that was selected"""
  dateOfBirth: Time

  """Whether or not this section was skipped"""
  skipped: Boolean!
}

"""Payload for updating profile audience"""
type UpdateCurationProfileAudiencePayload {
  """The updated profile."""
  curationProfile: CurationProfile
}

"""Payload for updating profile category"""
type UpdateCurationProfileCategoryPayload {
  """The updated profile."""
  curationProfile: CurationProfile
}

"""Payload for updating profile date of birth"""
type UpdateCurationProfileDateOfBirthPayload {
  """The updated profile."""
  curationProfile: CurationProfile
}

extend type Mutation {
  """
  Update the audience for the curation profile
  """
  updateCurationProfileAudience(input: UpdateCurationProfileAudienceInput!): UpdateCurationProfileAudiencePayload

  """
  Update the category for the curation profile
  """
  updateCurationProfileCategory(input: UpdateCurationProfileCategoryInput!): UpdateCurationProfileCategoryPayload

  """
  Update the date of birth for the curation profile
  """
  updateCurationProfileDateOfBirth(input: UpdateCurationProfileDateOfBirthInput!): UpdateCurationProfileDateOfBirthPayload
}


type CuratedPostsFeedData {
  """
  When the curated posts feed was generated. Null if the posts feed has not been generated.

  If the posts feed has not been generated, running the curatedPostsFeed query will generate the posts feed, and the query will only
  return once it's done generating.
  """
  generatedAt: Time

  """
  When the posts feed will be generated next. This will only update once the feed has started to generate a new one.
  """
  nextRegenerationTime: Time

  """
  When the curated posts feed is viewed, the duration in milliseconds it takes to generate a new one.
  """
  nextRegenerationTimeDuration: Int!

  """
  Whether or not the posts feed was viewed since it was generated.

  Null if it was never viewed.
  """
  viewedAt: Time
}

extend type Account {
  """
  Curated posts feed data.

  Will tell you when the posts feed is scheduled to be regenerated, and whether or not the curated posts feed was viewed.

  Can be used to show a "notification" to the user as well.
  """
  curatedPostsFeedData: CuratedPostsFeedData! @goField(forceResolver: true)

  """
  Curated posts feed.

  When this is viewed, the curated posts feed will be scheduled to regenerate in a set amount of hours.
  """
  curatedPostsFeedPosts(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the elements in the list that come before the specified cursor."""
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): PostConnection! @goField(forceResolver: true)
}
