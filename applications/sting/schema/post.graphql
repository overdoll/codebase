type Post implements PostObject & Node {
  id: ID!

  """Represents the account that this post belongs to"""
  artist: Actor!

  """Content belonging to this post"""
  content: [Content!]!

  """The date and time of when this post was created"""
  postedAt: Time!
}

interface PostObject {
  id: ID!

  """Represents the account that this post belongs to"""
  artist: Actor!

  """Content belonging to this post"""
  content: [Content!]!

  """The date and time of when this post was created"""
  postedAt: Time!
}

type PostEdge {
  cursor: String!
  node: Post!
}

type PostConnection {
  edges: [PostEdge!]!
  pageInfo: PageInfo!
}

extend type Account @key(fields: "id") {
  id: ID! @external

  """Posts specific to this account"""
  posts: PostConnection! @goField(forceResolver: true) @cursor

  """Contributions specific to this account"""
  contributions: PostConnection! @goField(forceResolver: true) @cursor
}

extend type Query {
  posts(
    """Filter by the name of the character"""
    characterName: String

    """Filter by the title of the media"""
    mediaTitle: String
  ): PostConnection! @cursor
}