"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "restricted",  # no license
])

# Generated Targets
# buildifier: disable=out-of-order-load
# buildifier: disable=load-on-top
load(
    "@rules_rust//cargo:cargo_build_script.bzl",
    "cargo_build_script",
)

cargo_build_script(
    name = "apollo_spaceport_build_script",
    srcs = glob(["**/*.rs"]),
    build_script_env = {
    },
    crate_features = [
    ],
    crate_root = "apollo-spaceport/build.rs",
    data = glob(["**"]),
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.1.0-preview.1",
    visibility = ["//visibility:private"],
    deps = [
        "@raze__tonic_build__0_6_2//:tonic_build",
    ] + selects.with_or({
        # cfg(unix)
        (
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
        ],
        "//conditions:default": [],
    }),
)

rust_binary(
    # Prefix bin name to disambiguate from (probable) collision with lib name
    # N.B.: The exact form of this is subject to change.
    name = "cargo_bin_spaceport",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "apollo-spaceport/src/spaceport.rs",
    data = [],
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "crate-name=spaceport",
        "manual",
    ],
    version = "0.1.0-preview.1",
    # buildifier: leave-alone
    deps = [
        ":apollo_spaceport",
        ":apollo_spaceport_build_script",
        "@raze__bytes__1_1_0//:bytes",
        "@raze__clap__3_1_6//:clap",
        "@raze__flate2__1_0_22//:flate2",
        "@raze__prost__0_9_0//:prost",
        "@raze__prost_types__0_9_0//:prost_types",
        "@raze__reqwest__0_11_10//:reqwest",
        "@raze__serde__1_0_136//:serde",
        "@raze__serde_json__1_0_79//:serde_json",
        "@raze__sys_info__0_9_1//:sys_info",
        "@raze__tokio__1_17_0//:tokio",
        "@raze__tonic__0_6_2//:tonic",
        "@raze__tracing__0_1_32//:tracing",
        "@raze__tracing_subscriber__0_3_9//:tracing_subscriber",
    ] + selects.with_or({
        # cfg(unix)
        (
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "@raze__uname__0_1_1//:uname",
        ],
        "//conditions:default": [],
    }),
)

rust_library(
    name = "apollo_spaceport",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "apollo-spaceport/src/lib.rs",
    data = [],
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "crate-name=apollo-spaceport",
        "manual",
    ],
    version = "0.1.0-preview.1",
    # buildifier: leave-alone
    deps = [
        ":apollo_spaceport_build_script",
        "@raze__bytes__1_1_0//:bytes",
        "@raze__clap__3_1_6//:clap",
        "@raze__flate2__1_0_22//:flate2",
        "@raze__prost__0_9_0//:prost",
        "@raze__prost_types__0_9_0//:prost_types",
        "@raze__reqwest__0_11_10//:reqwest",
        "@raze__serde__1_0_136//:serde",
        "@raze__serde_json__1_0_79//:serde_json",
        "@raze__sys_info__0_9_1//:sys_info",
        "@raze__tokio__1_17_0//:tokio",
        "@raze__tonic__0_6_2//:tonic",
        "@raze__tracing__0_1_32//:tracing",
        "@raze__tracing_subscriber__0_3_9//:tracing_subscriber",
    ] + selects.with_or({
        # cfg(unix)
        (
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "@raze__uname__0_1_1//:uname",
        ],
        "//conditions:default": [],
    }),
)
