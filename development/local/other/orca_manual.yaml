---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: orca
    app.kubernetes.io/managed-by: tilt
    app.kubernetes.io/name: orca
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: default-service-0.1.0
  name: orca
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: orca
      app.kubernetes.io/name: orca
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: orca
        app.kubernetes.io/managed-by: tilt
        app.kubernetes.io/name: orca
        tilt.dev/pod-template-hash: d466a4b53f1b8fa44404
    spec:
      containers:
        - command:
            - sh
            - -c
            - /app/applications/orca/image_binary
          image: {{ORCA_IMAGE}}
          imagePullPolicy: IfNotPresent
          name: orca
          env:
            - name: APP_DEBUG
              value: "true"
            - name: REDIS_HOST
              value: "redis-master"
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          resources: { }
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: orca
    app.kubernetes.io/managed-by: tilt
    app.kubernetes.io/name: orca
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: default-service-0.1.0
  name: orca
  namespace: default
spec:
  ports:
    - name: http
      port: 8000
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/instance: orca
    app.kubernetes.io/name: orca
  sessionAffinity: None
  type: ClusterIP
